1. add prices
2. add website
3. add ranking / sort feature
4. add use my location feature
5. allow users to read reviews? ( slide up function )
6. add a "where to eat" function
7. google type ahead functionality in the search bar
8. for the main app function, what if i just remove the safe area view and add more padding, i thinkit looks better that way ( or maybe add padding only for the android version)
9. check if the isOpenNow and the isTemporarily closed has conflict when we use the actual google API
10. should have a open in google maps function 
11. for restaurant card component, should have a swipe down function 

Error:
    1. VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices like PureComponent, shouldComponentUpdate, etc. {"contentLength": 6316.36376953125, "dt": 656, "prevDt": 13396}

Warnings:
after installing firebase cli:
npm WARN deprecated har-validator@5.1.3: this library is no longer supported
npm WARN deprecated debug@4.1.1: Debug versions >=3.2.0 <3.2.7 || >=4 <4.3.1 have a low-severity ReDos regression when used in a Node.js environment. It is recommended you upgrade to 3.2.7 or 4.3.1. (https://github.com/visionmedia/debug/issues/797)
npm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.
npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142

Note:   
1. safe area component is basically useless cos i nvr use it
2. favourite bar as well
3. issue faced at the end of lecture 227, for some reason this fucking worked *


*In meals-to-go terminal run: npx ngrok http http://localhost:5001

Go through the steps and copy the Forwarding information which looks like this http://31d8-41-184-201-155.ngrok.io

Replace the http://localhost:5001 with http://31d8-41-184-201-155.ngrok.io

so in location.service.js the fetch url will be something like this:

`http://31d8-41-184-201-155.ngrok.io/mealstogo-14b61/us-central1/geocode?city=${searchTerm}`
